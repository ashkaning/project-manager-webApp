{"version":3,"sources":["components/Grid/index.js","pages/Home.js","components/TopNav/index.js","utils/API.js","components/Form/index.js","pages/Role.js","pages/Service.js","pages/User.js","pages/NoMatch.js","App.js","index.js"],"names":["Container","_ref","fluid","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","Home","Component","TopNav","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","class","API","Object","defineProperty","NewRol","role","axios","post","getAllRoles","get","deleteRole","delete","getOneRole","updateOneRole","put","saveNewUser","user","getAllUsers","getAllServices","service","FormBtn","props","assign","style","float","marginBottom","Role","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","roleName","updateRoleName","updateRoleDesc","then","resAllRoles","setState","allRoles","data","catch","err","toast","error","handleFormSubmit","event","preventDefault","name","description","roleDesc","result","success","resetFeilds","resDelete","resGetOneRole","document","getElementById","display","resOneUpdate","handleTextChange","target","value","handleInputChange","_event$target","closeButton","bind","assertThisInitialized","_this2","Table","striped","bordered","hover","length","singleRole","key","Button","onClick","variant","Modal","Dialog","Header","Title","Body","Footer","onChange","placeholder","Services","serviceName","serviceDescription","subId","allServices","resAllServoces","saveNewService","esm_Col","siz","Form","Group","as","Label","Control","singleService","rows","Users","fName","lName","address","addressUnit","addressCity","addressState","addressZip","email","phone","companyName","logo","password","allUsers","roleId","resSucceed","resAllUsers","controlId","pattern","singleUser","createdAt","updatedAt","NoMatch","App","BrowserRouter","components_TopNav","react_toastify","Switch","Route","exact","path","component","Service","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.dd7e734b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\"\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\nexport function ColDark({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"colDarkBg col-\" + size)\r\n        .join(\" \") \r\n      }\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\nexport function ColLight({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"colLightBorder col-\" + size)\r\n        .join(\" \") \r\n      }\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n//import API from \"../utils/API\";\r\nimport { toast } from \"react-toastify\"\r\nimport { Link } from \"react-router-dom\";\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport \"./style.css\"\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <Row>\r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nexport default Home;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction TopNav(){\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg sticky-top navbar-light bg-light bg-navBar\">\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse justify-content-center\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\" id=\"category-nav\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/roles\">Departments/Roles</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/Services\">Services</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/Clients\">Clients</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"/users\">Login/Register</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n}\r\nexport default TopNav;","import axios from \"axios\";\r\nimport { ColLight } from \"../components/Grid\";\r\nexport default {\r\n    NewRol: function (role) {\r\n        return axios.post(\"/api/role\", role);\r\n    },\r\n    getAllRoles: function () {\r\n        return axios.get(\"/api/role\");\r\n    },\r\n    deleteRole: function (role) {\r\n        return axios.delete(\"/api/role/\", role);\r\n    },\r\n    getOneRole: function (role) {\r\n        return axios.post(\"/api/getOneRole\", role);\r\n    },\r\n    updateOneRole: function (role) {\r\n        return axios.put(\"/api/role\", role);\r\n    },\r\n    saveNewUser: function (user) {\r\n        return axios.post(\"/api/user\", user)\r\n    },\r\n    getAllUsers: function () {\r\n        return axios.get(\"/api/user\")\r\n    },\r\n    getAllServices: function () {\r\n        return axios.get(\"/api/service\")\r\n    },\r\n    saveNewUser: function (service) {\r\n        return axios.post(\"/api/service\", service)\r\n    }\r\n}","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\n// This file exports the Input, TextArea, and FormBtn components\r\n\r\nexport function Input(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input className=\"form-control\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function SelectBox({ props, children }){\r\n  return (\r\n    <div className=\"form-group\">\r\n      <select className=\"postCategory\" {...props}>\r\n        {children}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\nexport function TextArea({ props }){\r\n  return (\r\n    <div className=\"form-group\">\r\n       <textarea className=\"form-control\" {...props}> </textarea>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function FormBtn(props) {\r\n  return (\r\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport { toast } from \"react-toastify\"\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { Input, FormBtn } from \"../components/Form\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport \"./style.css\";\r\nimport { Table, Button, Modal } from 'react-bootstrap';\r\n\r\nclass Role extends Component {\r\n    state = {\r\n        roleName: \"\",\r\n        updateRoleName: \"\",\r\n        updateRoleDesc: \"\"\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roleDesc: \"\",\r\n            allRoles: [],\r\n            getOneRole: []\r\n        };\r\n        this.handleTextChange = this.handleTextChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllRoles();\r\n    }\r\n\r\n    /////////////////////Get all info from Roles db////////////////////\r\n    getAllRoles = () => {\r\n        API.getAllRoles()\r\n            .then(resAllRoles => {\r\n                this.setState({ allRoles: resAllRoles.data })\r\n            }).catch(err => toast.error(\"There is an error. Please contact administrator\"))\r\n    }\r\n    ////////////////////Insert Function for Making Roles//////////////////\r\n    handleFormSubmit = event => {\r\n        event.preventDefault()\r\n        API.NewRol({\r\n            name: this.state.roleName,\r\n            description: this.state.roleDesc\r\n        })\r\n            .then((result) => {\r\n                toast.success(\"New role added!\")\r\n                this.getAllRoles();\r\n                this.resetFeilds();\r\n            })\r\n            .catch(err => toast.error(\"There is an error. Please contact adminstrator\"))\r\n    }\r\n    ////////////////////DELETE FUNCTION///////////////////////\r\n    deleteRole = (id) => {\r\n        var data = { id: id }\r\n        API.deleteRole({ data })\r\n            .then(resDelete => {\r\n                toast.success(\"Role Deleted!\")\r\n                this.getAllRoles();\r\n            })\r\n            .catch(err => toast.error(\"There is an error. Please contact adminstrator\"))\r\n    }\r\n    ///////////////////GET INFORAMTION ON UPDATE CLICK AND UPDATE FUNCTION////////////\r\n    getOneRole = (id) => {\r\n        API.getOneRole({ id: id })\r\n            .then(resGetOneRole => {\r\n                toast.success(\"Please updae the information below\")\r\n                this.setState({\r\n                    getOneRole: resGetOneRole.data\r\n                })\r\n                document.getElementById(\"popupUpdate\").style.display = 'block';\r\n            }).catch(err => toast.error(\"There is an error. Please contact adminstrator\"))\r\n    }\r\n    updateOneRole = (id) => {\r\n        API.updateOneRole({\r\n            id: id,\r\n            name: this.state.updateRoleName,\r\n            description: this.state.updateRoleDesc\r\n        })\r\n            .then(resOneUpdate => {\r\n                toast.success(\"The role updated\")\r\n                this.getAllRoles();\r\n                this.resetFeilds();\r\n            }).catch(err => toast.error(\"There is an error. Please contact adminstrator\"))\r\n    }\r\n    /////////////////GET INFORMATION FROM INPUTS//////////////////////////\r\n    handleTextChange = event => {\r\n        this.setState({\r\n            roleDesc: event.target.value\r\n        });\r\n    };\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n    resetFeilds = () => {\r\n        this.setState({\r\n            roleDesc: '',\r\n            roleName: '',\r\n            updateRoleName: '',\r\n            updateRoleDesc: ''\r\n        })\r\n    }\r\n    closeButton = () => {\r\n        document.getElementById(\"popupUpdate\").style.display = 'none';\r\n        toast.error(\"Update box closed\")\r\n    }\r\n    //////////////////////////////////////////\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <h2 className=\"text-center\">\r\n                            Department List\r\n                        </h2>\r\n                    </Col>\r\n                    <Col size=\"md-12\">\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>ID</td>\r\n                                    <td>Role Name</td>\r\n                                    <td>Role Description</td>\r\n                                    <td>Edit</td>\r\n                                    <td>Delele</td>\r\n                                </tr>\r\n                            </thead>\r\n                            {this.state.allRoles.length ? (\r\n                                <tbody>\r\n                                    {this.state.allRoles.map(singleRole => (\r\n\r\n                                        <tr key={singleRole.id}>\r\n\r\n                                            <td name=\"roleId\">{singleRole.id}</td>\r\n                                            <td>{singleRole.name}</td>\r\n                                            <td>{singleRole.description}</td>\r\n                                            <td className=\"text-center\"><Button onClick={() => this.getOneRole(singleRole.id)} variant=\"primary\">Edit</Button></td>\r\n                                            <td className=\"text-center\"><Button onClick={() => this.deleteRole(singleRole.id)} variant=\"danger\">Delete</Button>\r\n                                            </td>\r\n\r\n                                        </tr>\r\n\r\n                                    ))}\r\n                                </tbody>\r\n                            ) : (<h3>Loading...</h3>)}\r\n\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n                <hr />\r\n                <Row>\r\n                    <Col size=\"md-6\">\r\n                        <Modal.Dialog id=\"popupUpdate\">\r\n                            <Modal.Header closeButton onClick={() => this.closeButton()}>\r\n                                <Modal.Title>Update Role</Modal.Title>\r\n                            </Modal.Header>\r\n\r\n                            <Modal.Body>\r\n                                <p>Please update the information below and save.</p>\r\n                            </Modal.Body>\r\n\r\n                            <Modal.Footer>\r\n                                <Row>\r\n                                    <Col size=\"md-6\">\r\n\r\n                                        <input onChange={this.handleInputChange} name=\"updateRoleName\" placeholder={this.state.getOneRole.name} />\r\n                                    </Col>\r\n                                    <Col size=\"md-6\">\r\n                                        <input onChange={this.handleInputChange} name=\"updateRoleDesc\" placeholder={this.state.getOneRole.description} />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col size=\"md-12\">\r\n                                        <Button onClick={() => this.updateOneRole(this.state.getOneRole.id)} variant=\"primary\">Save changes</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Modal.Footer>\r\n                        </Modal.Dialog>\r\n                    </Col>\r\n                    <Col size=\"md-6\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <input className=\"form-control\" name=\"roleName\" onChange={this.handleInputChange} value={this.state.roleName} placeholder=\"Marketing or Development (required)\" />\r\n                                <textarea name=\"roleDesc\" className=\"form-control\" onChange={this.handleTextChange} ></textarea>\r\n                            </div>\r\n                            <FormBtn\r\n                                onClick={this.handleFormSubmit}\r\n                            >\r\n                                Post\r\n                        </FormBtn>\r\n                        </form>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Role;","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport { toast } from \"react-toastify\"\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { Row, Container } from \"../components/Grid\";\r\nimport \"./style.css\";\r\nimport { Table, Button, Form, Col } from 'react-bootstrap';\r\n\r\nclass Services extends Component {\r\n    state = {\r\n        serviceName: '',\r\n        serviceDescription: '',\r\n        subId: '',\r\n        allServices: []\r\n    }\r\n    componentDidMount() {\r\n        this.getAllServices();\r\n    }\r\n    getAllServices = () => {\r\n        API.getAllServices()\r\n            .then(resAllServoces => {\r\n                this.setState({ allServices: resAllServoces.data })\r\n            }).catch(err => toast.error(\"There is an error. Please contact administrator\"))\r\n    }\r\n\r\n    saveNewService = (event) => {\r\n        event.preventDefault()\r\n        API.saveNewUser({\r\n            serviceName: this.state.serviceName,\r\n            serviceDescription: this.state.serviceDescription,\r\n            subId: this.state.subId\r\n        }).then(resAllServoces => {\r\n            toast.success(\"Menu added!\");\r\n        }).catch(err => toast.error(\"There is an error. Please contact administrator\"))\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n    //////////////////////////////////////\r\n    render() {\r\n        return (\r\n            <div className=\"topSpacing\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col siz=\"md-12\">\r\n                            <h2 className=\"text-center\">Add Services</h2>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col size=\"md-12\">\r\n                            <Form>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Service Name</Form.Label>\r\n                                        <Form.Control onChange={this.handleInputChange} type=\"text\" name=\"serviceName\" />\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Sub Service of</Form.Label>\r\n\r\n                                        {this.state.allServices.length ? (\r\n                                            <Form.Control onChange={this.handleInputChange} as=\"select\" name=\"subId\">\r\n                                                <option>Choose...</option>\r\n                                                {this.state.allServices.map(singleService => (\r\n                                                    <option value={singleService.id}>{singleService.id} - {singleService.serviceName} - {singleService.subId}</option>\r\n                                                ))}\r\n                                            </Form.Control>\r\n\r\n                                        ) : (<h3>Loading Services...</h3>)}\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Service Description</Form.Label>\r\n                                        <Form.Control onChange={this.handleInputChange} name=\"serviceDescription\" as=\"textarea\" rows=\"1\" />\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col}>\r\n                                        <Button onClick={this.saveNewService} variant=\"primary\" type=\"submit\">\r\n                                            Save\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Services;","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport { toast } from \"react-toastify\"\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { Row, Container } from \"../components/Grid\";\r\nimport \"./style.css\";\r\nimport { Table, Button, Form, Col } from 'react-bootstrap';\r\n\r\nclass Users extends Component {\r\n    state = {\r\n        fName: '',\r\n        lName: '',\r\n        address: '',\r\n        addressUnit: '',\r\n        addressCity: '',\r\n        addressState: '',\r\n        addressZip: '',\r\n        email: '',\r\n        phone: '',\r\n        companyName: '',\r\n        description: '',\r\n        logo: '',\r\n        password: '',\r\n        role: '',\r\n        allRoles: [],\r\n        allUsers: []\r\n    }\r\n    /*     constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                allRoles: []\r\n            };\r\n        } */\r\n\r\n    saveNewUser = (event) => {\r\n        event.preventDefault()\r\n        API.saveNewUser({\r\n            fName: this.state.fName,\r\n            lName: this.state.lName,\r\n            address: this.state.address,\r\n            addressUnit: this.state.addressUnit,\r\n            addressCity: this.state.addressCity,\r\n            addressState: this.state.addressState,\r\n            addressZip: this.state.addressZip,\r\n            email: this.state.email,\r\n            phone: this.state.phone,\r\n            companyName: this.state.companyName,\r\n            description: this.state.description,\r\n            logo: '',\r\n            password: this.state.password,\r\n            roleId: this.state.role\r\n        }).then(resSucceed => {\r\n            toast.success(\"User created successfully\")\r\n        }).catch(err => toast.error(\"There is an error. Please contact adminstrator\"))\r\n    }\r\n    componentDidMount() {\r\n        this.getAllRoles();\r\n        this.getAllUsers();\r\n    }\r\n    //////////////GET ALL USERS INFO///////////////\r\n    getAllUsers = () => {\r\n        API.getAllUsers()\r\n            .then(resAllUsers => {\r\n                this.setState({ allUsers: resAllUsers.data });\r\n            }).catch(err => toast.error(\"There is an error. Please contact administrator\"))\r\n    }\r\n    //////////////GET ALL ROLES AND DEPARMENTS////////////\r\n    getAllRoles = () => {\r\n        API.getAllRoles()\r\n            .then(resAllRoles => {\r\n                this.setState({ allRoles: resAllRoles.data });\r\n            }).catch(err => toast.error(\"There is an error. Please contact administrator\"))\r\n    }\r\n    //////////////////////////////////////////\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n    ///////////////////////////////////////////\r\n    render() {\r\n        return (\r\n            <div className=\"topSpacing\">\r\n                <Container>\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridFname\">\r\n                                <Form.Label>First Name</Form.Label>\r\n                                <Form.Control onChange={this.handleInputChange} name=\"fName\" type=\"text\" placeholder=\"Example: John\" />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGridLname\">\r\n                                <Form.Label>Last Name</Form.Label>\r\n                                <Form.Control onChange={this.handleInputChange} name=\"lName\" type=\"text\" placeholder=\"Example: Wick\" />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control onChange={this.handleInputChange} name=\"email\" type=\"email\" placeholder=\"Enter email\" />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control onChange={this.handleInputChange} name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridPhone\">\r\n                                <Form.Label>Phone</Form.Label>\r\n                                <Form.Control onChange={this.handleInputChange} name=\"phone\" type=\"tel\" pattern=\"[0-9]{3}[0-9]{3}[0-9]{4}\" placeholder=\"xxxxxxxxxx\" />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formGridCompanyName\">\r\n                                <Form.Label>Company Name</Form.Label>\r\n                                <Form.Control onChange={this.handleInputChange} name=\"companyName\" type=\"text\" placeholder=\"Example: Google\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                                <Form.Label>Address</Form.Label>\r\n                                <Form.Control onChange={this.handleInputChange} name=\"address\" placeholder=\"1234 Main St\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridAddress2\">\r\n                                <Form.Label>Address 2</Form.Label>\r\n                                <Form.Control onChange={this.handleInputChange} name=\"addressUnit\" placeholder=\"Apartment, studio, or floor\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridCity\">\r\n                                <Form.Label>City</Form.Label>\r\n                                <Form.Control onChange={this.handleInputChange} name=\"addressCity\" type=\"text\" placeholder=\"Example: Los Angeles\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridState\">\r\n                                <Form.Label>State</Form.Label>\r\n                                <Form.Control onChange={this.handleInputChange} name=\"addressState\" type=\"text\" placeholder=\"Example: CA\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridZip\">\r\n                                <Form.Label>Zip</Form.Label>\r\n                                <Form.Control onChange={this.handleInputChange} name=\"addressZip\" type=\"text\" placeholder=\"Example: 90001\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Comment or Description</Form.Label>\r\n                            <Form.Control onChange={this.handleInputChange} name=\"description\" as=\"textarea\" rows=\"3\" />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridRole\">\r\n                            <Form.Label>Role</Form.Label>\r\n\r\n                            {this.state.allRoles.length ? (\r\n                                <Form.Control onChange={this.handleInputChange} as=\"select\" name=\"role\">\r\n                                    <option>Choose...</option>\r\n                                    {this.state.allRoles.map(singleRole => (\r\n                                        <option value={singleRole.id}>{singleRole.name}</option>\r\n                                    ))}\r\n                                </Form.Control>\r\n\r\n                            ) : (<h3></h3>)}\r\n                        </Form.Group>\r\n                        <Button onClick={this.saveNewUser} variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                    </Button>\r\n                    </Form>\r\n                    {/* ///////////ُSHOW ALL THE USERS//////////// */}\r\n                </Container>\r\n                <hr />\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col size=\"md-12\">\r\n                            <h2 className=\"text-center\">\r\n                                User Lists\r\n                        </h2>\r\n                        </Col>\r\n                    </Row>\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <td>ID</td>\r\n                                <td>Full Name</td>\r\n                                <td>Email</td>\r\n                                <td>Phone</td>\r\n                                <td>Address</td>\r\n                                <td>Company Name</td>\r\n                                <td>Role</td>\r\n                                <td>Created Date</td>\r\n                                <td>Updated Date</td>\r\n                                <td>Description</td>\r\n                                <td>Edit</td>\r\n                                <td>Delele</td>\r\n                            </tr>\r\n                        </thead>\r\n                        {this.state.allUsers.length ? (\r\n                            <tbody>\r\n                                {this.state.allUsers.map(singleUser => (\r\n\r\n                                    <tr key={singleUser.id}>\r\n\r\n                                        <td name=\"roleId\">{singleUser.id}</td>\r\n                                        <td>{singleUser.fName} {singleUser.lName}</td>\r\n                                        <td>{singleUser.email} </td>\r\n                                        <td>{singleUser.phone} </td>\r\n                                        <td>{singleUser.address}, {singleUser.addressUnit}, {singleUser.addressCity}, {singleUser.addressState} {singleUser.addressZip}</td>\r\n                                        <td>{singleUser.companyName}</td>\r\n                                        <td>{singleUser.Role.name}</td>\r\n                                        <td>{singleUser.createdAt}</td>\r\n                                        <td>{singleUser.updatedAt}</td>\r\n                                        <td>{singleUser.description}</td>\r\n                                        <td className=\"text-center\"><Button onClick={() => this.getOneRole(singleUser.id)} variant=\"primary\">Edit</Button></td>\r\n                                        <td className=\"text-center\"><Button onClick={() => this.deleteRole(singleUser.id)} variant=\"danger\">Delete</Button>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                        ) : (<h3>Loading...</h3>)}\r\n\r\n                    </Table>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Users;","import React, { Component } from \"react\";\r\n//import API from \"../utils/API\";\r\nimport { toast } from \"react-toastify\"\r\nimport { Link } from \"react-router-dom\";\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport \"./style.css\"\r\n\r\nclass NoMatch extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col size=\"md-12\">\r\n                    <h1 className=\"text-center\">Are you lost?!</h1>    \r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n\r\n}\r\nexport default NoMatch;","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport TopNav from \"./components/TopNav\";\nimport Role from \"./pages/Role\";\nimport Service from \"./pages/Service\";\nimport Users from \"./pages/User\";\nimport NoMatch from \"./pages/NoMatch\";\n\n\n\nfunction App() {\n  return (\n    <Router>\n      \n      <div>\n      <TopNav />\n        <ToastContainer />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/roles\" component={Role} />\n          <Route exact path=\"/users\" component={Users} />\n          <Route exact path=\"/services\" component={Service} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}